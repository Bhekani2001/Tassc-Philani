@model Tassc.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" rel="stylesheet">
    <title>@ViewBag.Title</title>
    <style>
        .card-body {
            padding: 1.5rem;
        }
    </style>
</head>
<body>
    <main class="container mt-3">
        <section class="jumbotron text-center bg-light shadow">
            <div class="card mx-auto" style="max-width: 600px;">
                <div class="card-header bg-secondary text-white">
                    Create a New Account
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form" , id="registerform"}))
                    {
                        @Html.AntiForgeryToken()
                        <hr />
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        <div class="form-group row">
                            @Html.LabelFor(m => m.Email, new { @class = "col-md-4 col-form-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control required" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(m => m.Password, new { @class = "col-md-4 col-form-label" })
                            <div class="col-md-8">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control required" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 col-form-label" })
                            <div class="col-md-8">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control required" })
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-12 text-center">
                                <button type="submit" class="btn btn-outline-dark">
                                    <i class="fas fa-user-plus"></i> Register
                                </button>
                            </div>
                        </div>
                    }
                    <div class="text-center mt-3">
                        <p>Already have an account? <a href="@Url.Action("Login", "Account")" class="btn btn-link">Login</a></p>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.5.4/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.all.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#registerform').on('submit', function (e) {
                e.preventDefault();

                let valid = true;
                $('.required').each(function () {
                    if ($(this).val() === '') {
                        valid = false;
                        return false;
                    }
                });

                if (!valid) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Please fill out all required fields.',
                    });
                } else {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Registered successfully.',
                    }).then(() => {
                        this.submit();
                    });
                }
            });
        });
    </script>
</body>
</html>
