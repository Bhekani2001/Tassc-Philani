@using Tassc.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" rel="stylesheet">
    <title>@ViewBag.Title</title>
    <style>
        .card-body {
            padding: 1.5rem;
        }

        .forgot-password {
            color: #6c757d;
        }
    </style>
</head>
<body>
    <main class="container mt-3">
        <section class="jumbotron text-center bg-light shadow">
            <div class="card mx-auto" style="max-width: 600px;">
                <div class="card-header bg-secondary text-white">
                    Your TASSC Account Login
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form", id = "loginForm" }))
                    {
                        @Html.AntiForgeryToken()
                        <hr />
                        <div class="form-group row">
                            @Html.LabelFor(m => m.Email, new { @class = "col-md-4 col-form-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control required", id = "Email" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-8 offset-md-4">
                                <a href="@Url.Action("ForgotPassword","Account")" class="forgot-password">Forgot your password?</a>
                            </div>
                            @Html.LabelFor(m => m.Password, new { @class = "col-md-4 col-form-label" })
                            <div class="col-md-8">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control required", id = "Password" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-12 text-center">
                                <button type="submit" class="btn btn-outline-dark">
                                    <i class="fas fa-sign-in-alt"></i> Log in
                                </button>
                            </div>
                        </div>

                        <p class="text-center">
                            Don't have an account? <a href="@Url.Action("Register", "Account")" class="btn btn-link">Register</a>
                        </p>
                        <p class="text-center">
                            <a href="#" class="btn btn-outline-danger" data-toggle="modal" data-target="#googleLoginModal">
                                <i class="fab fa-google"></i> Log in with Google
                            </a>
                        </p>
                    }
                </div>
            </div>
        </section>
    </main>

    <div class="modal fade" id="googleLoginModal" tabindex="-1" role="dialog" aria-labelledby="googleLoginModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-secondary">
                    <h5 class="modal-title text-center" id="googleLoginModalLabel">Google Login</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body text-center">
                    <p>Please log in using your Google account.</p>
                    <button type="button" class="btn btn-outline-danger">
                        <i class="fab fa-google"></i> Log in with Google
                    </button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.5.4/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#loginForm').on('submit', function (e) {
                e.preventDefault();

                let valid = true;
                $('.required').each(function () {
                    if ($(this).val() === '') {
                        valid = false;
                        return false;
                    }
                });

                if (!valid) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Please fill out all required fields.',
                    });
                } else {
                    $.post($(this).attr('action'), $(this).serialize())
                        .done(function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: 'Logged in successfully.',
                                }).then(() => {
                                    window.location.href = response.returnUrl || '/';
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: response.message,
                                });
                            }
                        })
                        .fail(function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'An unexpected error occurred.',
                            });
                        });
                }
            });
        });
    </script>
</body>
</html>
